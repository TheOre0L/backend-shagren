
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.5.0
 * Query Engine version: 173f8d54f8d52e692c7e27e72a88314ec7aeff60
 */
Prisma.prismaVersion = {
  client: "6.5.0",
  engine: "173f8d54f8d52e692c7e27e72a88314ec7aeff60"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CartScalarFieldEnum = {
  id: 'id',
  userId: 'userId'
};

exports.Prisma.CartItemScalarFieldEnum = {
  id: 'id',
  cartId: 'cartId',
  productId: 'productId',
  quantity: 'quantity'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  title: 'title'
};

exports.Prisma.LogsScalarFieldEnum = {
  id: 'id',
  userid: 'userid',
  type: 'type',
  date: 'date',
  text: 'text'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  text: 'text',
  link: 'link',
  status: 'status',
  orderId: 'orderId',
  productId: 'productId',
  title: 'title',
  date: 'date'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  paymentId: 'paymentId',
  deliveryId: 'deliveryId',
  fio: 'fio',
  phone: 'phone',
  summa: 'summa',
  status: 'status',
  createdAt: 'createdAt'
};

exports.Prisma.DeliveryScalarFieldEnum = {
  id: 'id',
  type: 'type',
  deliveryServiceId: 'deliveryServiceId',
  deliverySum: 'deliverySum',
  city: 'city',
  tariffCode: 'tariffCode',
  recipient: 'recipient',
  toLocation: 'toLocation',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  value: 'value',
  currency: 'currency',
  status: 'status',
  yooKassaId: 'yooKassaId',
  description: 'description',
  data: 'data',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  productId: 'productId',
  quantity: 'quantity'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  password: 'password',
  email: 'email',
  fio: 'fio',
  city: 'city',
  view: 'view',
  role: 'role',
  telephone: 'telephone',
  refreshToken: 'refreshToken',
  isActive: 'isActive'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  title: 'title',
  price: 'price',
  oldPrice: 'oldPrice',
  description: 'description',
  longDescription: 'longDescription',
  discount: 'discount',
  rating: 'rating',
  reviewCount: 'reviewCount',
  images: 'images',
  thumbnails: 'thumbnails',
  categoryid: 'categoryid',
  typeid: 'typeid',
  count: 'count',
  enabled: 'enabled',
  isNew: 'isNew',
  isBestseller: 'isBestseller',
  sku: 'sku',
  deliveryInfo: 'deliveryInfo',
  features: 'features',
  dimensions: 'dimensions',
  weight: 'weight',
  relatedProducts: 'relatedProducts',
  materialid: 'materialid'
};

exports.Prisma.MaterialScalarFieldEnum = {
  id: 'id',
  name: 'name',
  enabled: 'enabled'
};

exports.Prisma.ColorScalarFieldEnum = {
  id: 'id',
  name: 'name',
  rgb: 'rgb'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  author: 'author',
  images: 'images',
  rating: 'rating',
  date: 'date',
  text: 'text',
  isVerified: 'isVerified',
  isHomePage: 'isHomePage',
  userId: 'userId'
};

exports.Prisma.TypeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  categoryid: 'categoryid'
};

exports.Prisma.HomePageScalarFieldEnum = {
  id: 'id',
  title: 'title',
  subTitle: 'subTitle',
  titleAbout: 'titleAbout',
  textAbout: 'textAbout',
  desctiption: 'desctiption',
  imageTitle: 'imageTitle',
  imageAbout: 'imageAbout',
  qrCodes: 'qrCodes',
  links: 'links'
};

exports.Prisma.SettingsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  email: 'email',
  phone: 'phone',
  adress: 'adress',
  payMetods: 'payMetods',
  apiKeyPay: 'apiKeyPay',
  idMarket: 'idMarket',
  urlSuccessPay: 'urlSuccessPay',
  urlCancelPay: 'urlCancelPay',
  deliveryMetods: 'deliveryMetods',
  serviceMode: 'serviceMode',
  testPayMode: 'testPayMode'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  cart: 'cart',
  cartItem: 'cartItem',
  category: 'category',
  logs: 'logs',
  notification: 'notification',
  order: 'order',
  delivery: 'delivery',
  payment: 'payment',
  orderItem: 'orderItem',
  user: 'user',
  product: 'product',
  Material: 'Material',
  Color: 'Color',
  review: 'review',
  type: 'type',
  homePage: 'homePage',
  Settings: 'Settings'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
